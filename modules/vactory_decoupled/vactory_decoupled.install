<?php

/**
 * @file
 * Install, update and uninstall functions for vactory_decoupled.
 */

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Add node_settings field.
 */
function vactory_decoupled_update_9001() {
  $storage_definition = BaseFieldDefinition::create('string_long')
    ->setLabel(t('Node Settings'))
    ->setDescription(t('Add extra parameters in JSON Format : { "isHomePage": true, "taxonomy": 4, "limit": 6 }'))
    ->setRevisionable(TRUE)
    ->setTranslatable(TRUE)
    ->setDefaultValue('')
    ->setRequired(TRUE)
    ->setDisplayOptions('form', [
      'type'     => 'string_textarea',
      'weight'   => 1,
      'settings' => [
        'rows' => 4,
      ],
    ])
    ->setDisplayConfigurable('form', FALSE)
    ->setDisplayConfigurable('view', FALSE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('node_settings', 'node', 'node', $storage_definition);
}

/**
 * Add internal_extra field.
 */
function vactory_decoupled_update_9002() {
  $storage_definition = BaseFieldDefinition::create('map')
    ->setLabel(t('Node extra'))
    ->setDescription(t('Extra data per node'))
    ->setTranslatable(FALSE)
    ->setClass('\Drupal\vactory_decoupled\Plugin\Field\InternalNodeEntityExtraFieldItemList')
    ->setComputed(TRUE)
    ->setReadOnly(TRUE)
    ->setTargetEntityTypeId('node')
    ->setDisplayConfigurable('form', FALSE)
    ->setDisplayConfigurable('view', FALSE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('internal_extra', 'node', 'node', $storage_definition);
}

/**
 * Add internal machine name field.
 */
function vactory_decoupled_update_9003() {
  $storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Machine name'))
    ->setDescription(t('Machine name for internal use.'))
    ->setTranslatable(FALSE)
    ->setRevisionable(FALSE)
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('machine_name', 'node', 'node', $storage_definition);
}

/**
 * Add taxonomy term field term_slug.
 */
function vactory_decoupled_update_9004() {
  $storage_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Slug'))
    ->setDescription(t('Term slug'))
    ->setTranslatable(TRUE)
    ->setRevisionable(TRUE)
    ->setRequired(FALSE)
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayOptions('form', [
      'type'     => 'string_textfield',
      'weight'   => 0,
    ])
    ->setDisplayConfigurable('view', FALSE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('term_2_slug', 'taxonomy_term', 'taxonomy_term', $storage_definition);
}

/**
 * Enable vactory decoupled breadcrumb.
 */
function vactory_decoupled_update_9005(&$sandbox) {
  \Drupal::service('module_installer')->install(['vactory_decoupled_breadcrumb']);
}

/**
 * Add internal_metatags field.
 */
function vactory_decoupled_update_9006() {
  $storage_definition = BaseFieldDefinition::create('map')
    ->setLabel(t('Node Metatags'))
    ->setDescription(t('Defined metatags per node'))
    ->setTranslatable(FALSE)
    ->setClass('\Drupal\vactory_decoupled\Plugin\Field\InternalNodeMetatagsFieldItemList')
    ->setComputed(TRUE)
    ->setReadOnly(TRUE)
    ->setTargetEntityTypeId('node')
    ->setDisplayConfigurable('form', FALSE)
    ->setDisplayConfigurable('view', FALSE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('internal_metatag', 'node', 'node', $storage_definition);
}

/**
 * Update node entity type - Install cache exclude field.
 */
function vactory_decoupled_update_9007(&$sandbox) {
  $field_definition = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Exclude from frontend cache'))
    ->setDescription(t('Check this to exclude current node from being cached in frontend'))
    ->setDefaultValue(0)
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
    ])
    ->setDisplayConfigurable('form', TRUE);
  Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('cache_exclude', 'node', 'vactory_decoupled', $field_definition);
}
